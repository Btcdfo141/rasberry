"""Test HomeKit img_util module."""
from homeassistant.components.camera import Image
from homeassistant.components.homekit.img_util import (
    TurboJPEGSingleton,
    scale_jpeg_camera_image,
)

from tests.async_mock import patch

EMPTY_16_12_JPEG = b"\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00H\x00H\x00\x00\xff\xdb\x00C\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xdb\x00C\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x11\x08\x00\x0c\x00\x10\x03\x01\x11\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x15\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xc4\x00\x14\x10\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xa0\x00\x00\x0f\xff\xd9"


def test_scale_jpeg_camera_image():
    """Test we can scale a jpeg image."""

    camera_image = Image("image/jpeg", EMPTY_16_12_JPEG)

    assert scale_jpeg_camera_image(camera_image, 16, 12) == EMPTY_16_12_JPEG

    jpeg_bytes = scale_jpeg_camera_image(camera_image, 8, 6)

    turbo_jpeg = TurboJPEGSingleton.instance()

    (new_width, new_height, _, _) = turbo_jpeg.decode_header(jpeg_bytes)

    assert new_width == 8
    assert new_height == 6


def test_turbojpeg_load_failure():
    """Handle libjpegturbo not being installed."""

    with patch(
        "homeassistant.components.homekit.img_util.TurboJPEG", side_effect=Exception
    ):
        TurboJPEGSingleton()
        assert TurboJPEGSingleton.instance() is False

    TurboJPEGSingleton()
    assert TurboJPEGSingleton.instance()
