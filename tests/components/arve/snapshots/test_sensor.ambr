# serializer version: 1
# name: test_sensors[entry_test-serial-number_air_quality_index]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_air_quality_index',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.AQI: 'aqi'>,
    'original_icon': None,
    'original_name': 'AQI',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'aqi',
    'unique_id': 'test-serial-number_aqi',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[entry_test-serial-number_carbon_dioxide]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_carbon_dioxide',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.CO2: 'carbon_dioxide'>,
    'original_icon': None,
    'original_name': 'CO2',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'co2',
    'unique_id': 'test-serial-number_co2',
    'unit_of_measurement': 'ppm',
  })
# ---
# name: test_sensors[entry_test-serial-number_humidity]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': 'Humidity',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'humidity',
    'unique_id': 'test-serial-number_humidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[entry_test-serial-number_none]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_none',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'TVOC',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'tvoc',
    'unique_id': 'test-serial-number_tvoc',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[entry_test-serial-number_pm10]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_pm10',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM10: 'pm10'>,
    'original_icon': None,
    'original_name': 'PM10',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'pm10',
    'unique_id': 'test-serial-number_pm10',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[entry_test-serial-number_pm2_5]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_pm2_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': None,
    'original_name': 'PM25',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'pm25',
    'unique_id': 'test-serial-number_pm25',
    'unit_of_measurement': 'µg/m³',
  })
# ---
# name: test_sensors[entry_test-serial-number_temperature]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Temperature',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'temperature',
    'unique_id': 'test-serial-number_temperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensors[entry_test-serial-number_tvoc]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_arve_tvoc',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'TVOC',
    'platform': 'arve',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'tvoc',
    'unique_id': 'test-serial-number_tvoc',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensors[my_arve_air_quality_index]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'aqi',
      'friendly_name': 'My Arve AQI',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_air_quality_index',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().aqi' id='4673889600'>",
  })
# ---
# name: test_sensors[my_arve_carbon_dioxide]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'carbon_dioxide',
      'friendly_name': 'My Arve CO2',
      'unit_of_measurement': 'ppm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_carbon_dioxide',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().co2' id='4683517632'>",
  })
# ---
# name: test_sensors[my_arve_humidity]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'My Arve Humidity',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_humidity',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().humidity' id='4674090384'>",
  })
# ---
# name: test_sensors[my_arve_none]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Arve TVOC',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_none',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().tvoc' id='4430967152'>",
  })
# ---
# name: test_sensors[my_arve_pm10]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm10',
      'friendly_name': 'My Arve PM10',
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_pm10',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().pm10' id='4683800288'>",
  })
# ---
# name: test_sensors[my_arve_pm2_5]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'My Arve PM25',
      'unit_of_measurement': 'µg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_pm2_5',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().pm25' id='4683861792'>",
  })
# ---
# name: test_sensors[my_arve_temperature]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'My Arve Temperature',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_temperature',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().temperature' id='4683873744'>",
  })
# ---
# name: test_sensors[my_arve_tvoc]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Arve TVOC',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_arve_tvoc',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': "<AsyncMock name='Arve().device_sensor_data().tvoc' id='4683902432'>",
  })
# ---
