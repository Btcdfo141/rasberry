# serializer version: 1
# name: test_energy_today
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Current hour',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.49',
  })
# ---
# name: test_energy_today.1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Current hour',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'current_hour_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_energy_today.2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_average_price-today_energy_average_price-]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Average - today',
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_average_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.37',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_average_price-today_energy_average_price-].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_average_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Average - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'average_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_average_price-today_energy_average_price-].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_average_price-today_energy_average_price-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Average - today',
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_average_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.37',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_average_price-today_energy_average_price-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_average_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Average - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'current_hour_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_average_price-today_energy_average_price-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Current hour',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.49',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Current hour',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'current_hour_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Current hour',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.49',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Current hour',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'average_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_highest_price_time-today_energy_highest_price_time-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'device_class': 'timestamp',
      'friendly_name': 'Energy market price Time of highest price - today',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_highest_price_time',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-12-07T16:00:00+00:00',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_highest_price_time-today_energy_highest_price_time-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_highest_price_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Time of highest price - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'highest_price_time',
    'unit_of_measurement': None,
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_highest_price_time-today_energy_highest_price_time-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_max_price-today_energy_max_price-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Highest price - today',
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_max_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.55',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_max_price-today_energy_max_price-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_max_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Highest price - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'max_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_energy_today[sensor.energyzero_today_energy_max_price-today_energy_max_price-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_average_price-today_energy_average_price-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'energy': dict({
        HAFakeDatetime(2022, 12, 6, 23, 0, tzinfo=datetime.timezone.utc): 0.512435,
        HAFakeDatetime(2022, 12, 7, 0, 0, tzinfo=datetime.timezone.utc): 0.468512,
        HAFakeDatetime(2022, 12, 7, 1, 0, tzinfo=datetime.timezone.utc): 0.40994800000000003,
        HAFakeDatetime(2022, 12, 7, 2, 0, tzinfo=datetime.timezone.utc): 0.380666,
        HAFakeDatetime(2022, 12, 7, 3, 0, tzinfo=datetime.timezone.utc): 0.39530699999999996,
        HAFakeDatetime(2022, 12, 7, 4, 0, tzinfo=datetime.timezone.utc): 0.40994800000000003,
        HAFakeDatetime(2022, 12, 7, 5, 0, tzinfo=datetime.timezone.utc): 0.40994800000000003,
        HAFakeDatetime(2022, 12, 7, 6, 0, tzinfo=datetime.timezone.utc): 0.556358,
        HAFakeDatetime(2022, 12, 7, 7, 0, tzinfo=datetime.timezone.utc): 0.6002809999999998,
        HAFakeDatetime(2022, 12, 7, 8, 0, tzinfo=datetime.timezone.utc): 0.6734859999999999,
        HAFakeDatetime(2022, 12, 7, 9, 0, tzinfo=datetime.timezone.utc): 0.644204,
        HAFakeDatetime(2022, 12, 7, 10, 0, tzinfo=datetime.timezone.utc): 0.5709989999999999,
        HAFakeDatetime(2022, 12, 7, 11, 0, tzinfo=datetime.timezone.utc): 0.483153,
        HAFakeDatetime(2022, 12, 7, 12, 0, tzinfo=datetime.timezone.utc): 0.541717,
        HAFakeDatetime(2022, 12, 7, 13, 0, tzinfo=datetime.timezone.utc): 0.644204,
        HAFakeDatetime(2022, 12, 7, 14, 0, tzinfo=datetime.timezone.utc): 0.702768,
        HAFakeDatetime(2022, 12, 7, 15, 0, tzinfo=datetime.timezone.utc): 0.717409,
        HAFakeDatetime(2022, 12, 7, 16, 0, tzinfo=datetime.timezone.utc): 0.8052549999999999,
        HAFakeDatetime(2022, 12, 7, 17, 0, tzinfo=datetime.timezone.utc): 0.541717,
        HAFakeDatetime(2022, 12, 7, 18, 0, tzinfo=datetime.timezone.utc): 0.5856399999999999,
        HAFakeDatetime(2022, 12, 7, 19, 0, tzinfo=datetime.timezone.utc): 0.5856399999999999,
        HAFakeDatetime(2022, 12, 7, 20, 0, tzinfo=datetime.timezone.utc): 0.468512,
        HAFakeDatetime(2022, 12, 7, 21, 0, tzinfo=datetime.timezone.utc): 0.483153,
        HAFakeDatetime(2022, 12, 7, 22, 0, tzinfo=datetime.timezone.utc): 0.45387099999999997,
      }),
      'energy_template': '{% set s = {"BTW": 1.21 } %}{{ price * s.BTW | float | round(5)}}',
      'friendly_name': 'Energy market price Average - today',
      'gas': dict({
        HAFakeDatetime(2022, 12, 5, 23, 0, tzinfo=datetime.timezone.utc): 1.7303,
        HAFakeDatetime(2022, 12, 6, 0, 0, tzinfo=datetime.timezone.utc): 1.7303,
        HAFakeDatetime(2022, 12, 6, 1, 0, tzinfo=datetime.timezone.utc): 1.7303,
        HAFakeDatetime(2022, 12, 6, 2, 0, tzinfo=datetime.timezone.utc): 1.7303,
        HAFakeDatetime(2022, 12, 6, 3, 0, tzinfo=datetime.timezone.utc): 1.7303,
        HAFakeDatetime(2022, 12, 6, 4, 0, tzinfo=datetime.timezone.utc): 1.7303,
        HAFakeDatetime(2022, 12, 6, 5, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 6, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 7, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 8, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 9, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 10, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 11, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 12, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 13, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 14, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 15, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 16, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 17, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 18, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 19, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 20, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 21, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 22, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 6, 23, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 7, 0, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 7, 1, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 7, 2, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 7, 3, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 7, 4, 0, tzinfo=datetime.timezone.utc): 1.7545,
        HAFakeDatetime(2022, 12, 7, 5, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 6, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 7, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 8, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 9, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 10, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 11, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 12, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 13, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 14, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 15, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 16, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 17, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 18, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 19, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 20, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 21, 0, tzinfo=datetime.timezone.utc): 1.7787,
        HAFakeDatetime(2022, 12, 7, 22, 0, tzinfo=datetime.timezone.utc): 1.7787,
      }),
      'gas_template': '{% set s = {"BTW": 1.21 } %}{{ price * s.BTW | float | round(5)}}',
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_average_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.54',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_average_price-today_energy_average_price-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_average_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Average - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'average_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_average_price-today_energy_average_price-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Current hour',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.717409',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_current_hour_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Current hour',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'current_hour_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_current_hour_price-today_energy_current_hour_price-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_highest_price_time-today_energy_highest_price_time-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'device_class': 'timestamp',
      'friendly_name': 'Energy market price Time of highest price - today',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_highest_price_time',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-12-07T16:00:00+00:00',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_highest_price_time-today_energy_highest_price_time-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_highest_price_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Time of highest price - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'highest_price_time',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_highest_price_time-today_energy_highest_price_time-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_hours_priced_equal_or_lower-today_energy_hours_priced_equal_or_lower-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Hours priced equal or lower than current - today',
      'icon': 'mdi:clock',
      'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_hours_priced_equal_or_lower',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '23',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_hours_priced_equal_or_lower-today_energy_hours_priced_equal_or_lower-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_hours_priced_equal_or_lower',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:clock',
    'original_name': 'Hours priced equal or lower than current - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'hours_priced_equal_or_lower',
    'unit_of_measurement': <UnitOfTime.HOURS: 'h'>,
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_hours_priced_equal_or_lower-today_energy_hours_priced_equal_or_lower-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_max_price-today_energy_max_price-today_energy]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Energy market price Highest price - today',
      'unit_of_measurement': '€/kWh',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_energy_max_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '0.805255',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_max_price-today_energy_max_price-today_energy].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_energy_max_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Highest price - today',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'max_price',
    'unit_of_measurement': '€/kWh',
  })
# ---
# name: test_sensor[sensor.energyzero_today_energy_max_price-today_energy_max_price-today_energy].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Energy market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_sensor[sensor.energyzero_today_gas_current_hour_price-today_gas_current_hour_price-today_gas]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by EnergyZero',
      'friendly_name': 'Gas market price Current hour',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '€/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.energyzero_today_gas_current_hour_price',
    'last_changed': <ANY>,
    'last_updated': <ANY>,
    'state': '1.7787',
  })
# ---
# name: test_sensor[sensor.energyzero_today_gas_current_hour_price-today_gas_current_hour_price-today_gas].1
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.energyzero_today_gas_current_hour_price',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Current hour',
    'platform': 'energyzero',
    'supported_features': 0,
    'translation_key': 'current_hour_price',
    'unit_of_measurement': '€/m³',
  })
# ---
# name: test_sensor[sensor.energyzero_today_gas_current_hour_price-today_gas_current_hour_price-today_gas].2
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': <DeviceEntryType.SERVICE: 'service'>,
    'hw_version': None,
    'id': <ANY>,
    'is_new': False,
    'manufacturer': 'EnergyZero',
    'model': None,
    'name': 'Gas market price',
    'name_by_user': None,
    'suggested_area': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
