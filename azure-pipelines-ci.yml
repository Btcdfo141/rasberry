# https://dev.azure.com/home-assistant

trigger:
  batch: true
  branches:
    include:
      - rc
      - dev
      - master
pr:
  - rc
  - dev
  - master

resources:
  containers:
    - container: 36
      image: homeassistant/ci-azure:3.6
    - container: 37
      image: homeassistant/ci-azure:3.7
  repositories:
    - repository: azure
      type: github
      name: "home-assistant/ci-azure"
      endpoint: "home-assistant"
variables:
  - name: PythonMain
    value: "36"
  - group: codecov

stages:
  - stage: "Overview"
    jobs:
      - job: "Lint"
        pool:
          vmImage: "ubuntu-latest"
        container: $[ variables['PythonMain'] ]
        steps:
          - template: templates/azp-step-cache.yaml@azure
            parameters:
              keyfile: "requirements_test.txt | homeassistant/package_constraints.txt"
              build: |
                python -m venv venv

                . venv/bin/activate
                pip install -r requirements_test.txt -c homeassistant/package_constraints.txt
                pre-commit install-hooks
          - script: |
              . venv/bin/activate
              pre-commit run flake8 --all-files
            displayName: "Run flake8"
      - job: "Validate"
        pool:
          vmImage: "ubuntu-latest"
        container: $[ variables['PythonMain'] ]
        steps:
          - template: templates/azp-step-cache.yaml@azure
            parameters:
              keyfile: "homeassistant/package_constraints.txt"
              build: |
                python -m venv venv

                . venv/bin/activate
                pip install -e .
          - script: |
              . venv/bin/activate
              python -m script.hassfest validate
            displayName: "Validate manifests"
          - script: |
              . venv/bin/activate
              ./script/gen_requirements_all.py validate
            displayName: "requirements_all validate"
      - job: "CheckFormat"
        pool:
          vmImage: "ubuntu-latest"
        container: $[ variables['PythonMain'] ]
        steps:
          - template: templates/azp-step-cache.yaml@azure
            parameters:
              keyfile: "requirements_test.txt | homeassistant/package_constraints.txt"
              build: |
                python -m venv venv

                . venv/bin/activate
                pip install -r requirements_test.txt -c homeassistant/package_constraints.txt
                pre-commit install-hooks
          - script: |
              . venv/bin/activate
              pre-commit run black --all-files
            displayName: "Check Black formatting"

  - stage: "Tests"
    dependsOn:
      - "Overview"
    jobs:
      - job: "PyTest"
        pool:
          vmImage: "ubuntu-latest"
        strategy:
          maxParallel: 3
          matrix:
            Python36:
              python.container: "36"
            Python37:
              python.container: "37"
        container: $[ variables['python.container'] ]
        steps:
          - template: templates/azp-step-cache.yaml@azure
            parameters:
              keyfile: "requirements_test_all.txt | homeassistant/package_constraints.txt"
              build: |
                set -e
                python -m venv venv

                . venv/bin/activate
                pip install -U pip setuptools pytest-xdist -c homeassistant/package_constraints.txt
                pip install -r requirements_test_all.txt -c homeassistant/package_constraints.txt
                # This is a TEMP. Eventually we should make sure our 4 dependencies drop typing.
                # Find offending deps with `pipdeptree -r -p typing`
                pip uninstall -y typing
                # This is a temporary workaround to deal with cache
                pip uninstall -y pytest-azurepipelines
          - script: |
              . venv/bin/activate
              pip install -e .
            displayName: "Install Home Assistant"
          - script: |
              set -e
              . venv/bin/activate
              pytest --timeout=9 --durations=10 -n 2 --dist loadfile --junitxml=test-results.xml --cov --cov-report=xml -qq -o console_output_style=count -p no:sugar tests
            displayName: "Run pytest for python $(python.container)"
            condition: succeeded()
          - script: |
              . venv/bin/activate
              codecov --token $(codecovToken)
            displayName: "Uploading test coverage to Codecov"
            condition: and(succeeded(), eq(variables['python.container'], variables['PythonMain']))
          - task: PublishTestResults@2
            inputs:
              testResultsFiles: "test-results.xml"
              testRunTitle: "Publish test results for Python $(python.container)"
            displayName: "Publish test results"
            condition: succeededOrFailed()
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: coverage.xml
            displayName: "Publish coverage artifact"
            condition: and(succeeded(), eq(variables['python.container'], variables['PythonMain']))
          - script: |
              set -e
              script/check_dirty
            displayName: "Run dirty check (Are tests are leaving files behind?)"

  - stage: "FullCheck"
    dependsOn:
      - "Overview"
    jobs:
      - job: "Pylint"
        pool:
          vmImage: "ubuntu-latest"
        container: $[ variables['PythonMain'] ]
        steps:
          - template: templates/azp-step-cache.yaml@azure
            parameters:
              keyfile: "requirements_all.txt | requirements_test.txt | homeassistant/package_constraints.txt"
              build: |
                set -e
                python -m venv venv

                . venv/bin/activate
                pip install -U pip setuptools
                pip install -r requirements_all.txt -c homeassistant/package_constraints.txt
                pip install -r requirements_test.txt -c homeassistant/package_constraints.txt
          - script: |
              . venv/bin/activate
              pip install -e .
            displayName: "Install Home Assistant"
          - script: |
              . venv/bin/activate
              pylint -j 2 homeassistant
            displayName: "Run pylint"
      - job: "Mypy"
        pool:
          vmImage: "ubuntu-latest"
        container: $[ variables['PythonMain'] ]
        steps:
          - template: templates/azp-step-cache.yaml@azure
            parameters:
              keyfile: "requirements_test.txt | setup.py | homeassistant/package_constraints.txt"
              build: |
                python -m venv venv

                . venv/bin/activate
                pip install -e . -r requirements_test.txt -c homeassistant/package_constraints.txt
                pre-commit install-hooks
          - script: |
              . venv/bin/activate
              pre-commit run mypy --all-files
            displayName: "Run mypy"
