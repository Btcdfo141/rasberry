# serializer version: 1
# name: test_sensors[all]
  list([
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'battery',
        'friendly_name': 'Test Battery level',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': '%',
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_battery_level',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '75',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'energy',
        'friendly_name': 'Test Charge energy added',
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
        'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_charge_energy_added',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '18.47',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'power',
        'friendly_name': 'Test Charger power',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfPower.KILO_WATT: 'kW'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_charger_power',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '7',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'voltage',
        'friendly_name': 'Test Charger voltage',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_charger_voltage',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '224',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'current',
        'friendly_name': 'Test Charger current',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_charger_current',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '32',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'speed',
        'friendly_name': 'Test Charge rate',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_charge_rate',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '49.2',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'distance',
        'friendly_name': 'Test Battery range',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_battery_range',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '424.35182592',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'speed',
        'friendly_name': 'Test Speed',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_speed',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': 'unknown',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'power',
        'friendly_name': 'Test Power',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfPower.KILO_WATT: 'kW'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_power',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '-7',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'enum',
        'friendly_name': 'Test Shift state',
        'icon': 'mdi:car-shift-pattern',
        'options': list([
          'p',
          'd',
          'r',
          'n',
        ]),
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_shift_state',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': 'unknown',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'distance',
        'friendly_name': 'Test Odometer',
        'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
        'unit_of_measurement': <UnitOfLength.KILOMETERS: 'km'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_odometer',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '8778.15941765875',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'pressure',
        'friendly_name': 'Test Tire pressure front left',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfPressure.PSI: 'psi'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_tire_pressure_front_left',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '43.1487288094417',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'pressure',
        'friendly_name': 'Test Tire pressure front right',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfPressure.PSI: 'psi'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_tire_pressure_front_right',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '43.1487288094417',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'pressure',
        'friendly_name': 'Test Tire pressure rear left',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfPressure.PSI: 'psi'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_tire_pressure_rear_left',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '42.7861344496985',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'pressure',
        'friendly_name': 'Test Tire pressure rear right',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfPressure.PSI: 'psi'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_tire_pressure_rear_right',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '42.7861344496985',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'temperature',
        'friendly_name': 'Test Inside temperature',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_inside_temperature',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '30.4',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'temperature',
        'friendly_name': 'Test Outside temperature',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_outside_temperature',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '30.5',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'temperature',
        'friendly_name': 'Test Driver temperature setting',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_driver_temperature_setting',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '22.5',
    }),
    StateSnapshot({
      'attributes': ReadOnlyDict({
        'device_class': 'temperature',
        'friendly_name': 'Test Passenger temperature setting',
        'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
        'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
      }),
      'context': <ANY>,
      'entity_id': 'sensor.test_passenger_temperature_setting',
      'last_changed': <ANY>,
      'last_updated': <ANY>,
      'state': '22.5',
    }),
  ])
# ---
