#!/usr/bin/env bash
# Setups the repository.

# Stop on errors
set -e

cd "$(dirname "$0")/.."

# Add default vscode settings if not existing
SETTINGS_FILE=./.vscode/settings.json
SETTINGS_TEMPLATE_FILE=./.vscode/settings.default.json
if [ ! -f "$SETTINGS_FILE" ]; then
    echo "Copy $SETTINGS_TEMPLATE_FILE to $SETTINGS_FILE."
    cp "$SETTINGS_TEMPLATE_FILE" "$SETTINGS_FILE"
fi

mkdir -p config


# Read min required python
MIN_PYTHON="$(python3 -c 'import toml; print(".".join(toml.load(open("pyproject.toml"))["project"]["requires-python"].lstrip("=>").split(".")[:2]))')"

if [ ! -n "$DEVCONTAINER" ] && [ ! -n "$VIRTUAL_ENV" ];then
  python3 -m venv venv
  source venv/bin/activate
fi

# Check python version
if ! python3 -c "import platform; exit(0) if tuple(int(v) for v in platform.python_version_tuple()) >= tuple(int(v) for v in '$MIN_PYTHON'.split('.')) else exit(1)" ;then
  echo "ERROR: Min python version isn't being used. Make sure your version is greater than or equal to $MIN_PYTHON".
  exit 1
fi

script/bootstrap

pre-commit install
python3 -m pip install -e . --config-settings editable_mode=compat --constraint homeassistant/package_constraints.txt
python3 -m script.translations develop --all

hass --script ensure_config -c config

if ! grep -R "logger" config/configuration.yaml >> /dev/null;then
echo "
logger:
  default: info
  logs:
    homeassistant.components.cloud: debug
" >> config/configuration.yaml
fi
