# serializer version: 1
# name: test_first_time_user_state
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Last.fm',
      'entity_picture': <MagicMock name='LastFMNetwork().get_user().get_image()' id='4847937024'>,
      'friendly_name': 'LastFM testaccount1',
      'last_played': None,
      'play_count': 0,
      'top_played': None,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lastfm_testaccount1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Not Scrobbling',
  })
# ---
# name: test_non_existent_user
  None
# ---
# name: test_sensors
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Last.fm',
      'entity_picture': <MagicMock name='LastFMNetwork().get_user().get_image()' id='4841627120'>,
      'friendly_name': 'LastFM testaccount1',
      'last_played': None,
      'play_count': <MagicMock name='LastFMNetwork().get_user().get_playcount()' id='4848424224'>,
      'top_played': None,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lastfm_testaccount1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': "<MagicMock name='LastFMNetwork().get_user().get_now_playing().artist' id='4852540448'> - <MagicMock name='LastFMNetwork().get_user().get_now_playing().title' id='4852533680'>",
  })
# ---
